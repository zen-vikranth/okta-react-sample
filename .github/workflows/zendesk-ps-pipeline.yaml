name: Build and Deploy to AWS EKS with Helm

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: forecaster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Build React app
        run: yarn build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          IMAGE=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Install Helm
        env:
          HELM_VERSION: ${{ secrets.HELM_VERSION }}
        run: |
          curl -sSL https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar xz
          sudo mv linux-amd64/helm /usr/local/bin/helm
          rm -rf linux-amd64
          helm version

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Helm upgrade (install if needed)
        env:
          IMAGE: ${{ env.IMAGE }}
          HELM_RELEASE: ${{ secrets.HELM_RELEASE }}
          HELM_CHART_PATH: ${{ secrets.HELM_CHART_PATH }}
          K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
        run: |
          helm upgrade --install $HELM_RELEASE $HELM_CHART_PATH \
            --namespace $K8S_NAMESPACE \
            --set image.repository=${IMAGE%:*} \
            --set image.tag=${IMAGE##*:} \
            --wait

      - name: Show deployment status
        env:
          K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
          HELM_RELEASE: ${{ secrets.HELM_RELEASE }}
        run: |
          DEPLOY=$(kubectl get deploy -n $K8S_NAMESPACE -l app.kubernetes.io/instance=$HELM_RELEASE -o jsonpath='{.items[0].metadata.name}')
          kubectl rollout status deployment/$DEPLOY -n $K8S_NAMESPACE
